"""
–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –ª–æ—Ä–¥–∞
—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π (–≤–µ—Ç–∫–∏, –Ω–µ –±–ª–æ–∫–∏—Ä—É—é—Ç –ª–æ—Ä–¥–∞).
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(str(Path(__file__).parent))

from loguru import logger
from utils.database import Database


def setup_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤"""
    logger.remove()
    logger.add(
        sys.stdout,
        format="<green>{time:HH:mm:ss}</green> | <level>{level: <8}</level> | <level>{message}</level>",
        level="INFO"
    )


def test_updated_lord_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ª–æ—Ä–¥–∞ —Å –≤–µ—Ç–∫–∞–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π"""

    logger.info("=== –¢–ï–°–¢ –û–ë–ù–û–í–õ–ï–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –¢–†–ï–ë–û–í–ê–ù–ò–ô –õ–û–†–î–ê ===")
    logger.info("‚ú® –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ù–ï –±–ª–æ–∫–∏—Ä—É—é—Ç –ø–æ–≤—ã—à–µ–Ω–∏–µ –ª–æ—Ä–¥–∞")
    logger.info("‚ú® –í–µ—Ç–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ txt —Ñ–∞–π–ª–∞–º:")
    logger.info("   üìö –†–∞–∑–≤–∏—Ç–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ (–≤–∫–ª—é—á–∞—è –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å) - —Å –ª–æ—Ä–¥–∞ 10")
    logger.info("   ‚öîÔ∏è –ë–∞–∑–æ–≤—ã–π –±–æ–π (–≤—Å–µ –±–æ–µ–≤—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è) - —Å –ª–æ—Ä–¥–∞ 13")
    logger.info("   üí∞ –°—Ä–µ–¥–Ω–∏–π –±–æ–π (—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ) - —Å –ª–æ—Ä–¥–∞ 14")
    logger.info("   üö∂ –ü–æ—Ö–æ–¥–Ω—ã–µ –æ—Ç—Ä—è–¥—ã - —Å –ª–æ—Ä–¥–∞ 17")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    db = Database("data/test_beast_lord_v2.db")

    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ (—Ç–æ–ª—å–∫–æ –∑–¥–∞–Ω–∏—è)
    logger.info("\n1. –ó–∞–≥—Ä—É–∑–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏–∑ building_chains.yaml...")
    if db.load_lord_requirements_from_config():
        logger.success("‚úÖ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    else:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")
        return False

    # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —ç–º—É–ª—è—Ç–æ—Ä–∞
    logger.info("\n2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —ç–º—É–ª—è—Ç–æ—Ä–∞...")
    emulator_id = db.sync_emulator(
        emulator_index=0,
        emulator_name="Test Emulator v2",
        enabled=True,
        notes="–¢–µ—Å—Ç–æ–≤—ã–π —ç–º—É–ª—è—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"
    )
    logger.success(f"‚úÖ –°–æ–∑–¥–∞–Ω —ç–º—É–ª—è—Ç–æ—Ä —Å ID: {emulator_id}")

    # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –° –í–ï–¢–ö–ê–ú–ò –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ô
    logger.info("\n3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å –≤–µ—Ç–∫–∞–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π...")
    if db.init_emulator_from_config(emulator_id):
        logger.success("‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –≤–µ—Ç–∫–∞–º–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π")
    else:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")
        return False

    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 11 (–¢–û–õ–¨–ö–û –ó–î–ê–ù–ò–Ø)
    logger.info("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –ª–æ—Ä–¥–∞ 11 (—Ç–æ–ª—å–∫–æ –∑–¥–∞–Ω–∏—è)...")
    requirements = db.get_lord_requirements(11)

    if requirements:
        logger.info(f"–ù–∞–π–¥–µ–Ω—ã —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 11:")
        for category, items in requirements.items():
            logger.info(f"  {category.upper()}:")
            for name, level in items.items():
                logger.info(f"    - {name}: {level}")
    else:
        logger.warning("–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 11 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    # 5. –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ó–î–ê–ù–ò–ô
    logger.info("\n5. –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞...")

    # –£–ª—É—á—à–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–¥–∞–Ω–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ txt —Ñ–∞–π–ª–∞–º (–ø—Ä–∏–±–ª–∏–∂–∞–µ–º—Å—è –∫ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ª–æ—Ä–¥–∞ 11)
    test_buildings = [
        ("—É–ª–µ–π", 10),  # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 11)
        ("—Ñ–µ—Ä–º–∞_–≥—Ä—É–Ω—Ç–∞", 11),  # –ì–æ—Ç–æ–≤
        ("—Ñ–µ—Ä–º–∞_—è–±–ª–æ–∫", 10),  # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 11)
        ("—Ñ–µ—Ä–º–∞_–ª–∏—Å—Ç—å–µ–≤", 10),  # –ì–æ—Ç–æ–≤ (–æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ 10)
        ("–ø—Ä—É–¥", 8),  # –ì–æ—Ç–æ–≤ (–æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ 8)
        ("—Ñ–ª–æ—Ä–∞_—ç–≤–æ–ª—é—Ü–∏–∏", 7),  # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 8)
        ("—Å–∫–ª–∞–¥_–ø–µ—Å–∫–∞", 8),  # –ì–æ—Ç–æ–≤
        ("—Å–∫–ª–∞–¥_–ª–∏—Å—Ç—å–µ–≤", 7),  # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 8)
        ("—Å–∫–ª–∞–¥_–≥—Ä—É–Ω—Ç–∞", 8),  # –ì–æ—Ç–æ–≤
        ("—Å–∫–ª–∞–¥_—è–±–ª–æ–∫", 7),  # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 8)
        ("—Å–∫–ª–∞–¥_–≤–æ–¥—ã", 7),  # –ì–æ—Ç–æ–≤ (–æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ 7)
        ("–≥–æ–ª–æ–≤–æ_–≤—Å–µ—è–¥–Ω—ã—Ö", 11),  # –ì–æ—Ç–æ–≤
        ("–ª–æ–≥–æ–≤–æ_–ø–ª–æ—Ç–æ—è–¥–Ω—ã—Ö", 10),  # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 11)
        ("–∂–∏–ª–∏—â–µ_–¥–µ—Ç–µ–Ω—ã—à–µ–π", 8),  # –ù–µ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 11)
        ("—Ü–µ–Ω—Ç—Ä_–∞–ª—å—è–Ω—Å–∞", 9),  # –ù–µ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 11)
    ]

    for building_name, level in test_buildings:
        db.update_building_progress(emulator_id, building_name, current_level=level)
        logger.info(f"  - {building_name}: —É—Ä–æ–≤–µ–Ω—å {level}")

    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ª–æ—Ä–¥–∞ 11 (–ë–ï–ó –£–ß–ï–¢–ê –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ô)
    logger.info("\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ª–æ—Ä–¥–∞ 11 (—Ç–æ–ª—å–∫–æ –∑–¥–∞–Ω–∏—è)...")
    ready, missing = db.check_lord_upgrade_readiness(emulator_id, 11)

    if ready:
        logger.success("‚úÖ –ì–æ—Ç–æ–≤ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ª–æ—Ä–¥–∞ –¥–æ 11 —É—Ä–æ–≤–Ω—è!")
    else:
        logger.warning("‚ùå –ù–µ –≥–æ—Ç–æ–≤ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ª–æ—Ä–¥–∞ 11")
        logger.info("–ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:")
        for category, items in missing.items():
            if items and category != 'research_info':  # –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º research_info –∫–∞–∫ –±–ª–æ–∫–∏—Ä—É—é—â–∏–µ
                logger.info(f"  {category.upper()} (–±–ª–æ–∫–∏—Ä—É–µ—Ç):")
                for item in items:
                    logger.info(f"    - {item}")
            elif category == 'research_info':
                logger.info(f"  –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø (–ù–ï –±–ª–æ–∫–∏—Ä—É—é—Ç):")
                for item in items:
                    logger.info(f"    - {item}")

    # 7. –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    logger.info("\n7. –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...")
    missing_detailed = db.get_missing_requirements(emulator_id, 11)

    for category, items in missing_detailed.items():
        if items and category == 'buildings':
            logger.info(f"–ó–î–ê–ù–ò–Ø (–Ω–µ–¥–æ—Å—Ç–∞–µ—Ç {len(items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –ë–õ–û–ö–ò–†–£–Æ–¢ –ª–æ—Ä–¥–∞):")
            for item in items:
                logger.info(f"  - {item['name']}: {item['current_level']}/{item['required_level']} "
                            f"(–Ω—É–∂–Ω–æ +{item['levels_needed']})")
        elif category == 'research_info':
            logger.info(f"–ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø (–ù–ï –ë–õ–û–ö–ò–†–£–Æ–¢ –ª–æ—Ä–¥–∞, –∫–∞—á–∞—é—Ç—Å—è –ø–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏):")
            for item in items:
                logger.info(f"  - {item['name']}: {item['current_level']}/{item['required_level']} "
                            f"(–Ω—É–∂–Ω–æ +{item['levels_needed']})")

    # 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–µ—Ç–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
    logger.info("\n8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ç–æ–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –ª–æ—Ä–¥–∞ (–ø–æ txt —Ñ–∞–π–ª–∞–º)
    test_researches = [
        ("—Ä–∞–∑–≤–∏—Ç–∏–µ_—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏", 10, True),  # –†–∞–∑–≤–∏—Ç–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ - —Å –ª–æ—Ä–¥–∞ 10
        ("–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å", 10, True),  # –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å —Ç–æ–∂–µ —Å –ª–æ—Ä–¥–∞ 10 (–≤ —Ç–æ–π –∂–µ –≤–µ—Ç–∫–µ)
        ("–∏–∑–æ–±–∏–ª–∏–µ_—Å–≤–µ—Ç–∞", 10, True),  # –í—Å–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ - —Å –ª–æ—Ä–¥–∞ 10
        ("–Ω–∞—á–∞–ª—å–Ω–∞—è_–∞—Ç–∞–∫–∞", 12, False),  # –ë–∞–∑–æ–≤—ã–π –±–æ–π - —Å –ª–æ—Ä–¥–∞ 13
        ("–Ω–∞—á–∞–ª—å–Ω–∞—è_–∞—Ç–∞–∫–∞", 13, True),  # –ë–∞–∑–æ–≤—ã–π –±–æ–π - —Å –ª–æ—Ä–¥–∞ 13
        ("—Å—Ä–µ–¥–Ω—è—è_–∞—Ç–∞–∫–∞", 13, True),  # –°—Ä–µ–¥–Ω—è—è –∞—Ç–∞–∫–∞ –≤—Ö–æ–¥–∏—Ç –≤ –±–∞–∑–æ–≤—ã–π –±–æ–π (—Å –ª–æ—Ä–¥–∞ 13)
        ("–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ_—Å–∫–æ—Ä–æ—Å—Ç–∏", 13, False),  # –°—Ä–µ–¥–Ω–∏–π –±–æ–π (—ç–∫–æ–Ω–æ–º–∏–∫–∞) - —Å –ª–æ—Ä–¥–∞ 14
        ("–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ_—Å–∫–æ—Ä–æ—Å—Ç–∏", 14, True),  # –°—Ä–µ–¥–Ω–∏–π –±–æ–π (—ç–∫–æ–Ω–æ–º–∏–∫–∞) - —Å –ª–æ—Ä–¥–∞ 14
        ("–ø–æ—Ö–æ–¥–Ω—ã–π_–æ—Ç—Ä—è–¥_1", 16, False),  # –ü–æ—Ö–æ–¥–Ω—ã–µ –æ—Ç—Ä—è–¥—ã - —Å –ª–æ—Ä–¥–∞ 17
        ("–ø–æ—Ö–æ–¥–Ω—ã–π_–æ—Ç—Ä—è–¥_1", 17, True),  # –ü–æ—Ö–æ–¥–Ω—ã–µ –æ—Ç—Ä—è–¥—ã - —Å –ª–æ—Ä–¥–∞ 17
    ]

    for research_name, lord_level, expected in test_researches:
        result = db.is_research_unlocked(research_name, lord_level)
        status = "‚úÖ" if result == expected else "‚ùå"
        logger.info(f"  {status} {research_name} –¥–ª—è –ª–æ—Ä–¥–∞ {lord_level}: {result} (–æ–∂–∏–¥–∞–ª–æ—Å—å {expected})")

    # 9. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–∞ —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π
    logger.info("\n9. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–∞ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –∑–¥–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞)...")

    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å –ª–æ—Ä–¥–æ–º 10 (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–¥–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 11)
    db.update_emulator_progress(emulator_id, lord_level=10)
    next_upgrade = db.get_next_building_to_upgrade(emulator_id, 10)

    if next_upgrade:
        logger.success(f"‚úÖ –°–ª–µ–¥—É—é—â–µ–µ –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–∞: {next_upgrade['name']}")
        logger.info(f"  –¢–∏–ø: {next_upgrade['type']}")
        logger.info(f"  –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {next_upgrade['current_level']}")
        logger.info(f"  –¶–µ–ª–µ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: {next_upgrade['target_level']}")
        logger.info(f"  –§–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–ª—å: {next_upgrade['final_target']}")
        logger.info(f"  –î–ª—è –ª–æ—Ä–¥–∞: {next_upgrade['lord_level']}")
        logger.info(f"  –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {next_upgrade['priority']}")
    else:
        logger.info("–ù–µ—Ç –∑–¥–∞–Ω–∏–π/–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –≥–æ—Ç–æ–≤—ã—Ö –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–∞")

    # 10. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 13
    logger.info("\n10. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –¥–ª—è –ª–æ—Ä–¥–∞ 13...")
    db.update_emulator_progress(emulator_id, lord_level=13)

    available_research = db.get_available_research_for_upgrade(emulator_id)

    if available_research:
        logger.info(f"–î–æ—Å—Ç—É–ø–Ω–æ {len(available_research)} –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –¥–ª—è –ª–æ—Ä–¥–∞ 13:")
        for research in available_research[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            logger.info(f"  - {research['research_name']}: {research['current_level']}/{research['target_level']}")
    else:
        logger.info("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –¥–ª—è –ª–æ—Ä–¥–∞ 13")

    # 11. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–æ—Ä–¥ 13 –≥–æ—Ç–æ–≤ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ë–ï–ó –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
    logger.info("\n11. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ù–ï –±–ª–æ–∫–∏—Ä—É—é—Ç –ª–æ—Ä–¥–∞ 13...")

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∑–¥–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 13 —Å–æ–≥–ª–∞—Å–Ω–æ txt —Ñ–∞–π–ª–∞–º
    buildings_for_lord_13 = [
        ("—É–ª–µ–π", 13), ("—Ñ–µ—Ä–º–∞_–≥—Ä—É–Ω—Ç–∞", 12), ("—Ñ–µ—Ä–º–∞_—è–±–ª–æ–∫", 13),
        ("—Ñ–µ—Ä–º–∞_–ª–∏—Å—Ç—å–µ–≤", 10), ("–ø—Ä—É–¥", 8),  # –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Ä–æ–≤–Ω—è—Ö
        ("—Ñ–ª–æ—Ä–∞_—ç–≤–æ–ª—é—Ü–∏–∏", 10), ("—Å–∫–ª–∞–¥_–ø–µ—Å–∫–∞", 10), ("—Å–∫–ª–∞–¥_–ª–∏—Å—Ç—å–µ–≤", 10),
        ("—Å–∫–ª–∞–¥_–≥—Ä—É–Ω—Ç–∞", 10), ("—Å–∫–ª–∞–¥_—è–±–ª–æ–∫", 10), ("—Å–∫–ª–∞–¥_–≤–æ–¥—ã", 7),
        ("–≥–æ–ª–æ–≤–æ_–≤—Å–µ—è–¥–Ω—ã—Ö", 13), ("–ª–æ–≥–æ–≤–æ_–ø–ª–æ—Ç–æ—è–¥–Ω—ã—Ö", 13),
        ("–∂–∏–ª–∏—â–µ_–¥–µ—Ç–µ–Ω—ã—à–µ–π", 13), ("—Ü–µ–Ω—Ç—Ä_–∞–ª—å—è–Ω—Å–∞", 13),
        ("—Ü–µ–Ω—Ç—Ä_—Å–±–æ—Ä–∞_2", 1), ("—Å–∫–ª–∞–¥_2", 1)  # –Ω–æ–≤—ã–µ –∑–¥–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 13
    ]

    for building_name, level in buildings_for_lord_13:
        db.update_building_progress(emulator_id, building_name, current_level=level)

    ready_13, missing_13 = db.check_lord_upgrade_readiness(emulator_id, 13)

    if ready_13:
        logger.success("‚úÖ –õ–æ—Ä–¥ 13 –≥–æ—Ç–æ–≤ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é! –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ù–ï –±–ª–æ–∫–∏—Ä—É—é—Ç!")
    else:
        logger.warning("‚ùå –õ–æ—Ä–¥ 13 –Ω–µ –≥–æ—Ç–æ–≤, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–∞–Ω–∏—è:")
        for category, items in missing_13.items():
            if items and category == 'buildings':
                logger.info(f"  –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–¥–∞–Ω–∏—è:")
                for item in items:
                    logger.info(f"    - {item}")

    # 12. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î
    logger.info("\n12. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    stats = db.get_database_stats()
    for table, count in stats.items():
        logger.info(f"  {table}: {count} –∑–∞–ø–∏—Å–µ–π")

    logger.success("\n=== –¢–ï–°–¢ –û–ë–ù–û–í–õ–ï–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û ===")
    logger.info("üéØ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –±–æ–ª—å—à–µ –ù–ï –±–ª–æ–∫–∏—Ä—É—é—Ç –ø–æ–≤—ã—à–µ–Ω–∏–µ –ª–æ—Ä–¥–∞")
    logger.info("üéØ –í–µ—Ç–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç txt —Ñ–∞–π–ª–∞–º:")
    logger.info("   üìö –†–∞–∑–≤–∏—Ç–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ (–≤–∫–ª—é—á–∞—è –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å) - –ª–æ—Ä–¥ 10+")
    logger.info("   ‚öîÔ∏è –ë–∞–∑–æ–≤—ã–π –±–æ–π (–≤—Å–µ –±–æ–µ–≤—ã–µ + –º—É—Ç–∞—Ü–∏–∏) - –ª–æ—Ä–¥ 13+")
    logger.info("   üí∞ –°—Ä–µ–¥–Ω–∏–π –±–æ–π (—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ) - –ª–æ—Ä–¥ 14+")
    logger.info("   üö∂ –ü–æ—Ö–æ–¥–Ω—ã–µ –æ—Ç—Ä—è–¥—ã - –ª–æ—Ä–¥ 17+")
    logger.info("üéØ –ó–¥–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Å–ø–∏—Å–∫—É –∏–∑ txt —Ñ–∞–π–ª–∞")
    logger.info("üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –∑–¥–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ ‚Üí –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è ‚Üí –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–¥–∞–Ω–∏—è")
    return True


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    setup_logging()

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞
        config_path = Path("configs/building_chains.yaml")
        if not config_path.exists():
            logger.error(f"–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {config_path}")
            logger.info("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª configs/building_chains.yaml –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–∞")
            return 1

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
        if test_updated_lord_system():
            logger.success("–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! üéâ")
            return 0
        else:
            logger.error("–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π")
            return 1

    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1


if __name__ == "__main__":
    exit(main())