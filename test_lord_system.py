"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –ª–æ—Ä–¥–∞
—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∏ –º–µ—Ö–∞–Ω–∏–∫–æ–π –∏–≥—Ä–æ–≤—ã—Ö —Å–ª–æ—Ç–æ–≤.
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(str(Path(__file__).parent))

from loguru import logger
from utils.database import Database


def setup_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤"""
    logger.remove()
    logger.add(
        sys.stdout,
        format="<green>{time:HH:mm:ss}</green> | <level>{level: <8}</level> | <level>{message}</level>",
        level="INFO"
    )


def test_updated_lord_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ª–æ—Ä–¥–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –º–µ—Ö–∞–Ω–∏–∫–æ–π —Å–ª–æ—Ç–æ–≤"""

    logger.info("=== –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –¢–†–ï–ë–û–í–ê–ù–ò–ô –õ–û–†–î–ê ===")
    logger.info("‚ú® –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    logger.info("   üîß –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –ª–æ—Ä–¥–∞: lord_requirements[X] = —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –° (X-1) –î–û X")
    logger.info("   üîß –ó–¥–∞–Ω–∏—è –ò –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∫–∞—á–∞—é—Ç—Å—è –ü–û –ì–û–¢–û–í–ù–û–°–¢–ò –≤ —Å–≤–æ–∏—Ö —Å–ª–æ—Ç–∞—Ö!")
    logger.info("   üîß –°—Ç—Ä–æ–∏—Ç–µ–ª–∏: 3-4 —Å–ª–æ—Ç–∞ (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É—Ä–æ–≤–Ω—è –ª–æ—Ä–¥–∞)")
    logger.info("   üîß –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: –æ—Ç–¥–µ–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å (1 —Å–ª–æ—Ç)")
    logger.info("   üîß –°—Ç—Ä–æ–≥–æ –ø–æ –ø–æ—Ä—è–¥–∫—É –∫–∞–∫ –≤ txt —Å–ø–∏—Å–∫–∞—Ö!")
    logger.info("   üîß –í–µ—Ç–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.txt'")
    logger.info("   üîß –ó–¥–∞–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ '–°–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π.txt'")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    db = Database("data/test_beast_lord_v2_fixed.db")

    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
    logger.info("\n1. –ó–∞–≥—Ä—É–∑–∫–∞ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...")
    if db.load_lord_requirements_from_config():
        logger.success("‚úÖ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    else:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")
        return False

    # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —ç–º—É–ª—è—Ç–æ—Ä–∞
    logger.info("\n2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —ç–º—É–ª—è—Ç–æ—Ä–∞...")
    emulator_id = db.sync_emulator(
        emulator_index=0,
        emulator_name="Test Emulator Fixed",
        enabled=True,
        notes="–¢–µ—Å—Ç–æ–≤—ã–π —ç–º—É–ª—è—Ç–æ—Ä –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"
    )
    logger.success(f"‚úÖ –°–æ–∑–¥–∞–Ω —ç–º—É–ª—è—Ç–æ—Ä —Å ID: {emulator_id}")

    # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
    logger.info("\n3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –≤–µ—Ç–∫–∞–º–∏...")
    if db.init_emulator_from_config(emulator_id):
        logger.success("‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    else:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")
        return False

    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 11
    logger.info("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¥–ª—è –ª–æ—Ä–¥–∞ 11...")
    logger.info("   (–≠—Ç–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –° 10 –î–û 11)")

    requirements = db.get_lord_requirements(11)

    if requirements:
        logger.info(f"–ù–∞–π–¥–µ–Ω—ã —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –° 10 –î–û 11:")
        for category, items in requirements.items():
            logger.info(f"  {category.upper()}:")
            for name, level in items.items():
                logger.info(f"    - {name}: –¥–æ {level} —É—Ä–æ–≤–Ω—è")
    else:
        logger.warning("–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 11 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    # 5. –°–∏–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ (–ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤—ã –∫ –ª–æ—Ä–¥—É 11)
    logger.info("\n5. –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ (–ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤—ã –∫ –ª–æ—Ä–¥—É 11)...")

    # –°–æ–≥–ª–∞—Å–Ω–æ "–°–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π.txt" –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å 10 –¥–æ 11 –Ω—É–∂–Ω–æ:
    test_buildings = [
        ("—É–ª–µ–π", 10),               # –ì–æ—Ç–æ–≤ ‚úÖ
        ("—Ñ–µ—Ä–º–∞_–≥—Ä—É–Ω—Ç–∞", 10),       # –ì–æ—Ç–æ–≤ ‚úÖ
        ("—Ñ–µ—Ä–º–∞_—è–±–ª–æ–∫", 9),         # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 10)
        ("—Ñ–µ—Ä–º–∞_–ª–∏—Å—Ç—å–µ–≤", 10),      # –ì–æ—Ç–æ–≤ ‚úÖ
        ("–ø—Ä—É–¥", 8),                # –ì–æ—Ç–æ–≤ ‚úÖ
        ("—Ñ–ª–æ—Ä–∞_—ç–≤–æ–ª—é—Ü–∏–∏", 6),      # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 7)
        ("—Å–∫–ª–∞–¥_–ø–µ—Å–∫–∞", 7),         # –ì–æ—Ç–æ–≤ ‚úÖ
        ("—Å–∫–ª–∞–¥_–ª–∏—Å—Ç—å–µ–≤", 7),       # –ì–æ—Ç–æ–≤ ‚úÖ
        ("—Å–∫–ª–∞–¥_–≥—Ä—É–Ω—Ç–∞", 7),        # –ì–æ—Ç–æ–≤ ‚úÖ
        ("—Å–∫–ª–∞–¥_—è–±–ª–æ–∫", 6),         # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 7)
        ("—Å–∫–ª–∞–¥_–≤–æ–¥—ã", 7),          # –ì–æ—Ç–æ–≤ ‚úÖ
        ("–≥–æ–ª–æ–≤–æ_–≤—Å–µ—è–¥–Ω—ã—Ö", 10),    # –ì–æ—Ç–æ–≤ ‚úÖ
        ("–ª–æ–≥–æ–≤–æ_–ø–ª–æ—Ç–æ—è–¥–Ω—ã—Ö", 9),   # –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤ (–Ω—É–∂–Ω–æ 10)
    ]

    for building_name, level in test_buildings:
        db.update_building_progress(emulator_id, building_name, current_level=level)
        logger.info(f"  - {building_name}: —É—Ä–æ–≤–µ–Ω—å {level}")

    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ª–æ—Ä–¥–∞ 11 (–¢–û–õ–¨–ö–û –∑–¥–∞–Ω–∏—è)
    logger.info("\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ª–æ—Ä–¥–∞ 11 (–¢–û–õ–¨–ö–û –∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä—É—é—Ç)...")
    ready, missing = db.check_lord_upgrade_readiness(emulator_id, 11)

    if ready:
        logger.success("‚úÖ –ì–æ—Ç–æ–≤ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ª–æ—Ä–¥–∞ –¥–æ 11 —É—Ä–æ–≤–Ω—è!")
    else:
        logger.warning("‚ùå –ù–µ –≥–æ—Ç–æ–≤ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ª–æ—Ä–¥–∞ 11")
        logger.info("–ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:")
        for category, items in missing.items():
            if items and category == 'buildings':
                logger.info(f"  –ó–î–ê–ù–ò–Ø (–ë–õ–û–ö–ò–†–£–Æ–¢):")
                for item in items:
                    logger.info(f"    - {item}")
            elif category == 'research_info':
                logger.info(f"  –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø (–ù–ï –ë–õ–û–ö–ò–†–£–Æ–¢, –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏):")
                for item in items:
                    logger.info(f"    - {item}")

    # 7. –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    logger.info("\n7. –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...")
    missing_detailed = db.get_missing_requirements(emulator_id, 11)

    for category, items in missing_detailed.items():
        if items and category == 'buildings':
            logger.info(f"–ó–î–ê–ù–ò–Ø (–Ω–µ–¥–æ—Å—Ç–∞–µ—Ç {len(items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –ë–õ–û–ö–ò–†–£–Æ–¢ –ª–æ—Ä–¥–∞):")
            for item in items:
                logger.info(f"  - {item['name']}: {item['current_level']}/{item['required_level']} "
                            f"(–Ω—É–∂–Ω–æ +{item['levels_needed']})")

    # 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–µ—Ç–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
    logger.info("\n8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–• –≤–µ—Ç–æ–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π –ª–æ—Ä–¥–∞
    test_researches = [
        ("—Ä–∞–∑–≤–∏—Ç–∏–µ_—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏", 10, True),     # –†–∞–∑–≤–∏—Ç–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ - —Å –ª–æ—Ä–¥–∞ 10
        ("–∏–∑–æ–±–∏–ª–∏–µ_—Å–≤–µ—Ç–∞", 10, True),          # –†–∞–∑–≤–∏—Ç–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ - —Å –ª–æ—Ä–¥–∞ 10
        ("–Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å", 10, True),              # –†–∞–∑–≤–∏—Ç–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ - —Å –ª–æ—Ä–¥–∞ 10
        ("–ø–æ—Ö–≤–∞–ª–∞_–∑–∞_—Å–º–µ–ª–æ—Å—Ç—å", 12, False),    # –ë–∞–∑–æ–≤—ã–π –±–æ–π - —Å –ª–æ—Ä–¥–∞ 13
        ("–ø–æ—Ö–≤–∞–ª–∞_–∑–∞_—Å–º–µ–ª–æ—Å—Ç—å", 13, True),     # –ë–∞–∑–æ–≤—ã–π –±–æ–π - —Å –ª–æ—Ä–¥–∞ 13
        ("–Ω–∞—á–∞–ª—å–Ω–∞—è_–∞—Ç–∞–∫–∞", 13, True),         # –ë–∞–∑–æ–≤—ã–π –±–æ–π - —Å –ª–æ—Ä–¥–∞ 13
        ("–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ_—Å–∫–æ—Ä–æ—Å—Ç–∏", 13, False),  # –°—Ä–µ–¥–Ω–∏–π –±–æ–π - —Å –ª–æ—Ä–¥–∞ 14
        ("–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ_—Å–∫–æ—Ä–æ—Å—Ç–∏", 14, True),   # –°—Ä–µ–¥–Ω–∏–π –±–æ–π - —Å –ª–æ—Ä–¥–∞ 14
        ("–Ω–∞—á–∞–ª—å–Ω—ã–π_—Å–æ–≤–º–µ—Å—Ç–Ω—ã–π_–±–æ–π", 14, True), # –û—Å–æ–±—ã–π –æ—Ç—Ä—è–¥ - —Å –ª–æ—Ä–¥–∞ 14
        ("—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π_—Å–±–æ—Ä", 16, False),       # –ü–æ—Ö–æ–¥–Ω—ã–µ –æ—Ç—Ä—è–¥—ã - —Å –ª–æ—Ä–¥–∞ 17
        ("—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π_—Å–±–æ—Ä", 17, True),        # –ü–æ—Ö–æ–¥–Ω—ã–µ –æ—Ç—Ä—è–¥—ã - —Å –ª–æ—Ä–¥–∞ 17
    ]

    for research_name, lord_level, expected in test_researches:
        result = db.is_research_unlocked(research_name, lord_level)
        status = "‚úÖ" if result == expected else "‚ùå"
        logger.info(f"  {status} {research_name} –¥–ª—è –ª–æ—Ä–¥–∞ {lord_level}: {result} (–æ–∂–∏–¥–∞–ª–æ—Å—å {expected})")

    # 9. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–∞ —Å –ü–†–ê–í–ò–õ–¨–ù–û–ô –ª–æ–≥–∏–∫–æ–π
    logger.info("\n9. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è (–ø–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤ —Å–ª–æ—Ç–∞—Ö)...")
    logger.info("   üèóÔ∏è –°—Ç—Ä–æ–∏—Ç–µ–ª–∏: 3-4 —Å–ª–æ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –ª–æ—Ä–¥–∞")
    logger.info("   üìö –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: –æ—Ç–¥–µ–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å (1 —Å–ª–æ—Ç)")
    logger.info("   ‚ö° –í–°–Å –∫–∞—á–∞–µ—Ç—Å—è –ü–û –ì–û–¢–û–í–ù–û–°–¢–ò –≤ —Ä–∞–º–∫–∞—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤!")

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ—Ä–¥–∞ 10 –ü–†–ê–í–ò–õ–¨–ù–´–ú —Å–ø–æ—Å–æ–±–æ–º (—á–µ—Ä–µ–∑ emulator_index)
    emulator_data = db.get_emulator(0)  # –ü–æ–ª—É—á–∞–µ–º –ø–æ emulator_index
    if emulator_data:
        emulator_db_id = emulator_data['id']
        db.update_emulator_progress(emulator_db_id, lord_level=10)
        logger.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–æ—Ä–¥ 10 –¥–ª—è —ç–º—É–ª—è—Ç–æ—Ä–∞ —Å DB ID: {emulator_db_id}")
    else:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç–º—É–ª—è—Ç–æ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        return False

    next_upgrade = db.get_next_building_to_upgrade(emulator_db_id, 10)

    if next_upgrade:
        logger.success(f"‚úÖ –°–ª–µ–¥—É—é—â–µ–µ –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–∞: {next_upgrade['name']}")
        logger.info(f"  –¢–∏–ø: {next_upgrade['type']}")
        logger.info(f"  –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {next_upgrade['current_level']}")
        logger.info(f"  –¶–µ–ª–µ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: {next_upgrade['target_level']}")
        logger.info(f"  –§–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–ª—å: {next_upgrade['final_target']}")
        logger.info(f"  –î–ª—è –ª–æ—Ä–¥–∞: {next_upgrade['lord_level']}")
        logger.info(f"  –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {next_upgrade['priority']}")
    else:
        logger.info("–ù–µ—Ç –∑–¥–∞–Ω–∏–π/–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –≥–æ—Ç–æ–≤—ã—Ö –¥–ª—è –∞–ø–≥—Ä–µ–π–¥–∞")

    # 10. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–ª—è –ª–æ—Ä–¥–∞ 13
    logger.info("\n10. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –¥–ª—è –ª–æ—Ä–¥–∞ 13...")
    db.update_emulator_progress(emulator_db_id, lord_level=13)

    available_research = db.get_available_research_for_upgrade(emulator_db_id)

    if available_research:
        logger.info(f"–î–æ—Å—Ç—É–ø–Ω–æ {len(available_research)} –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –¥–ª—è –ª–æ—Ä–¥–∞ 13:")
        for research in available_research[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            logger.info(f"  - {research['research_name']}: {research['current_level']}/{research['target_level']}")
    else:
        logger.info("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –¥–ª—è –ª–æ—Ä–¥–∞ 13")

    # 11. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–æ—Ä–¥ –≥–æ—Ç–æ–≤ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é –ë–ï–ó –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
    logger.info("\n11. –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ù–ï –±–ª–æ–∫–∏—Ä—É—é—Ç –ª–æ—Ä–¥–∞...")

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∑–¥–∞–Ω–∏—è –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –ª–æ—Ä–¥–∞ 11
    buildings_for_lord_11 = [
        ("—É–ª–µ–π", 10), ("—Ñ–µ—Ä–º–∞_–≥—Ä—É–Ω—Ç–∞", 10), ("—Ñ–µ—Ä–º–∞_—è–±–ª–æ–∫", 10),
        ("—Ñ–µ—Ä–º–∞_–ª–∏—Å—Ç—å–µ–≤", 10), ("–ø—Ä—É–¥", 8), ("—Ñ–ª–æ—Ä–∞_—ç–≤–æ–ª—é—Ü–∏–∏", 7),
        ("—Å–∫–ª–∞–¥_–ø–µ—Å–∫–∞", 7), ("—Å–∫–ª–∞–¥_–ª–∏—Å—Ç—å–µ–≤", 7), ("—Å–∫–ª–∞–¥_–≥—Ä—É–Ω—Ç–∞", 7),
        ("—Å–∫–ª–∞–¥_—è–±–ª–æ–∫", 7), ("—Å–∫–ª–∞–¥_–≤–æ–¥—ã", 7), ("–≥–æ–ª–æ–≤–æ_–≤—Å–µ—è–¥–Ω—ã—Ö", 10),
        ("–ª–æ–≥–æ–≤–æ_–ø–ª–æ—Ç–æ—è–¥–Ω—ã—Ö", 10)
    ]

    for building_name, level in buildings_for_lord_11:
        db.update_building_progress(emulator_db_id, building_name, current_level=level)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ª–æ—Ä–¥–∞ 10 –¥–ª—è —Ç–µ—Å—Ç–∞
    db.update_emulator_progress(emulator_db_id, lord_level=10)

    ready_11, missing_11 = db.check_lord_upgrade_readiness(emulator_db_id, 11)

    if ready_11:
        logger.success("‚úÖ –õ–æ—Ä–¥ 11 –≥–æ—Ç–æ–≤ –∫ –ø–æ–≤—ã—à–µ–Ω–∏—é! –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ù–ï –±–ª–æ–∫–∏—Ä—É—é—Ç!")
    else:
        logger.warning("‚ùå –õ–æ—Ä–¥ 11 –Ω–µ –≥–æ—Ç–æ–≤, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–∞–Ω–∏—è:")
        for category, items in missing_11.items():
            if items and category == 'buildings':
                logger.info(f"  –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–¥–∞–Ω–∏—è:")
                for item in items:
                    logger.info(f"    - {item}")

    # 12. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î
    logger.info("\n12. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    stats = db.get_database_stats()
    for table, count in stats.items():
        logger.info(f"  {table}: {count} –∑–∞–ø–∏—Å–µ–π")

    logger.success("\n=== –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û ===")
    logger.info("üéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–´:")
    logger.info("   ‚úÖ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –ª–æ—Ä–¥–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ (–° X-1 –î–û X)")
    logger.info("   ‚úÖ –ó–¥–∞–Ω–∏—è –ò –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∫–∞—á–∞—é—Ç—Å—è –ü–û –ì–û–¢–û–í–ù–û–°–¢–ò!")
    logger.info("   ‚úÖ –°—Ç—Ä–æ–∏—Ç–µ–ª–∏: 3-4 —Å–ª–æ—Ç–∞, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: –æ—Ç–¥–µ–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å")
    logger.info("   ‚úÖ –°—Ç—Ä–æ–≥–æ –ø–æ –ø–æ—Ä—è–¥–∫—É –∫–∞–∫ –≤ txt —Å–ø–∏—Å–∫–∞—Ö")
    logger.info("   ‚úÖ –í–µ—Ç–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.txt'")
    logger.info("   ‚úÖ –ó–¥–∞–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç '–°–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π.txt'")
    logger.info("   ‚úÖ –†–∞–±–æ—Ç–∞ –ø–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: –∑–¥–∞–Ω–∏—è + –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ —Å–≤–æ–∏—Ö —Å–ª–æ—Ç–∞—Ö")
    return True


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    setup_logging()

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
        config_path = Path("configs/building_chains.yaml")
        if not config_path.exists():
            logger.error(f"–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {config_path}")
            logger.info("–°–æ–∑–¥–∞–π—Ç–µ –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô —Ñ–∞–π–ª configs/building_chains.yaml –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–∞")
            return 1

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
        if test_updated_lord_system():
            logger.success("–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! üéâ")
            return 0
        else:
            logger.error("–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–æ–π")
            return 1

    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        logger.error(f"Traceback: {traceback.format_exc()}")
        return 1


if __name__ == "__main__":
    exit(main())